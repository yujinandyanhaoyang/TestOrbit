"""
Django settings for TestOrbit project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e+al9n%2w2)p0cnno31kpl3$ph6yghtx#yczo__&xbw-wjcn4!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# 跨域设置---
CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    # 'x-csrftoken',
    'x-requested-with',
    'Pragma',
)
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)
# 跨域设置 end---
INSTALLED_APPS = [
    'user',
    'config',
    'apiData',
    'project',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'corsheaders',  # 暂时注释掉以避免模块导入错误
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',  # 暂时注释掉跨域设置
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'TestOrbit.Middleware.ResponseMiddleWare',
]

ROOT_URLCONF = 'TestOrbit.urls'
AUTH_USER_MODEL = 'user.ExpendUser'  # 指定扩展的用户模型（注意：使用小写引用）
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'TestOrbit.Authentication.TokenAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend', 'rest_framework.filters.OrderingFilter',
        'TestOrbit.FilterBackends.QueryOnlyFields', 'TestOrbit.FilterBackends.DiySearchFilter',
        'rest_framework.filters.SearchFilter'],
    'DEFAULT_PAGINATION_CLASS': 'TestOrbit.Pagination.StandardPageNumberPagination',
    'EXCEPTION_HANDLER': 'TestOrbit.ExceptionHandler.response_exception_handler'
}
WSGI_APPLICATION = 'TestOrbit.wsgi.application'

AUTHORIZE_API = (
    '/user/user-cfg-params',
    '/api-data/scheduled-tasks',
    '/api-data/schedule-api-cases',
    '/api-data/cancel-scheduled-task',
)
NO_AUTHORIZE_API = ('/user/login',)

FILE_DIR_HOST = 'http://127.0.0.1:8003/'  # 用于获取上传的文件主机地址，部署时需要修改
# 数据库配置
# 自行配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': "127.0.0.1",
        'NAME': "testorbit_db",
        'USER': "root",
        'PASSWORD': "123456",
        'PORT': "3306",
        'OPTIONS': {'init_command': 'SET default_storage_engine=INNODB'}

    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'INFO',  # 控制台输出日志级别
            'class': 'logging.StreamHandler',
        },
        # 输出文件
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',  # 从 DEBUG 改为 INFO，不再显示 SQL 查询
        },
    }
}
