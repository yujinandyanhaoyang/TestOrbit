# Generated by Django 4.1.3 on 2023-02-28 02:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conf', '0002_initial'),
        ('apiData', '0002_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LimUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('real_name', models.CharField(default='', max_length=255, verbose_name='真实姓名')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserTempParams',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='参数名称')),
                ('value', models.JSONField(null=True, verbose_name='参数值')),
                ('step_name', models.CharField(max_length=255, verbose_name='参数来源步骤名')),
                ('type', models.SmallIntegerField(default=3, verbose_name='请求数据类别（header、var、host）')),
                ('case', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='apiData.apicase', verbose_name='参数来源的用例')),
                ('param_type', models.ForeignKey(default='string', on_delete=django.db.models.deletion.PROTECT, to='conf.confparamtype', verbose_name='变量值的类型')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '用户临时参数',
                'db_table': 'user_temp_params',
            },
        ),
        migrations.CreateModel(
            name='UserCfg',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
                ('failed_stop', models.BooleanField(default=True, verbose_name='执行失败是否停止（跳过）执行')),
                ('only_failed_log', models.BooleanField(default=False, verbose_name='仅记录失败的日志')),
                ('exec_status', models.SmallIntegerField(default=0, verbose_name='执行状态')),
                ('envir', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='conf.confenvir', verbose_name='默认用户环境')),
            ],
            options={
                'verbose_name': '用户配置数据',
                'db_table': 'user_cfg',
            },
        ),
    ]
