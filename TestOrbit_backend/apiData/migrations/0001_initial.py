# Generated by Django 5.2.3 on 2025-08-26 21:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ApiCase",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="修改时间"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, verbose_name="测试用例名称")),
                ("status", models.IntegerField(default=0, verbose_name="执行结果")),
                ("remark", models.TextField(null=True, verbose_name="用例备注")),
                (
                    "report_data",
                    models.JSONField(null=True, verbose_name="测试报告数据"),
                ),
                ("is_deleted", models.BooleanField(default=0, verbose_name="是否删除")),
                (
                    "latest_run_time",
                    models.DateTimeField(null=True, verbose_name="最后一次执行时间"),
                ),
                ("position", models.IntegerField(default=0, verbose_name="排序优先级")),
            ],
            options={
                "verbose_name": "接口用例",
                "db_table": "api_case",
            },
        ),
        migrations.CreateModel(
            name="ApiCaseModule",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="修改时间"
                    ),
                ),
                (
                    "id",
                    models.CharField(max_length=12, primary_key=True, serialize=False),
                ),
                (
                    "module_related",
                    models.JSONField(
                        default=list, verbose_name="所属模块级联关系（父子级）"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="模块名称")),
                ("position", models.IntegerField(default=0, verbose_name="排序优先级")),
            ],
            options={
                "verbose_name": "用例模块",
                "db_table": "api_case_module",
            },
        ),
        migrations.CreateModel(
            name="ApiCaseStep",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="修改时间"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[("api", "API"), ("sql", "SQL")],
                        default="api",
                        max_length=50,
                        verbose_name="步骤类型",
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "step_name",
                    models.CharField(
                        max_length=255, null=True, verbose_name="步骤名称"
                    ),
                ),
                (
                    "step_order",
                    models.PositiveIntegerField(default=1, verbose_name="步骤顺序"),
                ),
                (
                    "status",
                    models.IntegerField(default=0, null=True, verbose_name="执行状态"),
                ),
                (
                    "retried_times",
                    models.SmallIntegerField(null=True, verbose_name="重试次数"),
                ),
                (
                    "controller_data",
                    models.JSONField(null=True, verbose_name="步骤控制器"),
                ),
                ("params", models.JSONField(null=True, verbose_name="详细参数")),
                ("results", models.JSONField(null=True, verbose_name="步骤执行结果")),
                ("timeout", models.IntegerField(null=True, verbose_name="超时时间")),
                (
                    "source",
                    models.CharField(max_length=50, null=True, verbose_name="API来源"),
                ),
            ],
            options={
                "verbose_name": "api用例的步骤",
                "db_table": "api_case_step",
            },
        ),
        migrations.CreateModel(
            name="ApiForeachStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_order", models.PositiveIntegerField(verbose_name="步骤顺序")),
                (
                    "step_name",
                    models.CharField(
                        default="", max_length=255, verbose_name="步骤名称"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        default="case",
                        max_length=255,
                        verbose_name="执行参数类型(1.api2.case；3.SQL 4.header（取value） 5.var 6.host)",
                    ),
                ),
                ("status", models.IntegerField(default=0, verbose_name="执行状态")),
                ("enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "controller_data",
                    models.JSONField(null=True, verbose_name="步骤控制器"),
                ),
                (
                    "retried_times",
                    models.SmallIntegerField(null=True, verbose_name="重试了几次"),
                ),
            ],
            options={
                "verbose_name": "api用例循环控制器步骤",
                "db_table": "api_foreach_step",
            },
        ),
        migrations.CreateModel(
            name="ApiModule",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="修改时间"
                    ),
                ),
                (
                    "id",
                    models.CharField(max_length=12, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100, verbose_name="模块名称")),
                (
                    "module_related",
                    models.JSONField(
                        default=list, verbose_name="所属模块级联关系（父子级）"
                    ),
                ),
            ],
            options={
                "verbose_name": "用例模块",
                "db_table": "api_module",
            },
        ),
        migrations.CreateModel(
            name="ScheduledTask",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="修改时间"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "task_name",
                    models.CharField(
                        default="定时测试任务", max_length=255, verbose_name="任务名称"
                    ),
                ),
                ("case_ids", models.JSONField(verbose_name="测试用例ID列表")),
                (
                    "parallel",
                    models.IntegerField(
                        choices=[(0, "串行"), (1, "并行")],
                        default=0,
                        verbose_name="执行模式",
                    ),
                ),
                ("owner_ids", models.JSONField(verbose_name="负责人ID列表")),
                ("scheduled_time", models.DateTimeField(verbose_name="预定执行时间")),
                (
                    "actual_start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="实际开始时间"
                    ),
                ),
                (
                    "actual_end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="实际结束时间"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待执行"),
                            ("running", "执行中"),
                            ("completed", "已完成"),
                            ("failed", "执行失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="任务状态",
                    ),
                ),
                (
                    "execution_result",
                    models.JSONField(blank=True, null=True, verbose_name="执行结果"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="错误信息"),
                ),
                (
                    "execution_count",
                    models.IntegerField(default=0, verbose_name="执行次数"),
                ),
                (
                    "is_recurring",
                    models.BooleanField(default=False, verbose_name="是否重复执行"),
                ),
                (
                    "recurring_interval",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="重复间隔(分钟)"
                    ),
                ),
            ],
            options={
                "verbose_name": "定时任务",
                "db_table": "api_scheduled_task",
                "ordering": ["-scheduled_time"],
            },
        ),
    ]
